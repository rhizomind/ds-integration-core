//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.08.11 at 08:23:43 PM CEST 
//


package com.rhizomind.ds.integrations.owasp.v21;

import com.rhizomind.ds.integrations.owasp.Exception;
import com.rhizomind.ds.integrations.owasp.*;
import jakarta.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.rhizomind.ds.integrations.owasp.v25 package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.rhizomind.ds.integrations.owasp.v25
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Analysis }
     * 
     */
    public Analysis createAnalysis() {
        return new Analysis();
    }

    /**
     * Create an instance of {@link Dependency }
     * 
     */
    public Dependency createDependency() {
        return new Dependency();
    }

    /**
     * Create an instance of {@link Vulnerability }
     * 
     */
    public Vulnerability createVulnerability() {
        return new Vulnerability();
    }

    /**
     * Create an instance of {@link RelatedDependency }
     * 
     */
    public RelatedDependency createRelatedDependency() {
        return new RelatedDependency();
    }

    /**
     * Create an instance of {@link Exception }
     * 
     */
    public Exception createException() {
        return new Exception();
    }

    /**
     * Create an instance of {@link ScanInfo }
     * 
     */
    public ScanInfo createScanInfo() {
        return new ScanInfo();
    }

    /**
     * Create an instance of {@link ProjectInfo }
     * 
     */
    public ProjectInfo createProjectInfo() {
        return new ProjectInfo();
    }

    /**
     * Create an instance of {@link Analysis.Dependencies }
     * 
     */
    public Analysis.Dependencies createAnalysisDependencies() {
        return new Analysis.Dependencies();
    }

    /**
     * Create an instance of {@link Identifier }
     * 
     */
    public Identifier createIdentifier() {
        return new Identifier();
    }

    /**
     * Create an instance of {@link Evidence }
     * 
     */
    public Evidence createEvidence() {
        return new Evidence();
    }

    /**
     * Create an instance of {@link CvssV2 }
     * 
     */
    public CvssV2 createCvssV2() {
        return new CvssV2();
    }

    /**
     * Create an instance of {@link CvssV3 }
     * 
     */
    public CvssV3 createCvssV3() {
        return new CvssV3();
    }

    /**
     * Create an instance of {@link Reference }
     * 
     */
    public Reference createReference() {
        return new Reference();
    }

    /**
     * Create an instance of {@link Software }
     * 
     */
    public Software createSoftware() {
        return new Software();
    }

    /**
     * Create an instance of {@link Severity }
     * 
     */
    public Severity createSeverity() {
        return new Severity();
    }

    /**
     * Create an instance of {@link Dependency.ProjectReferences }
     * 
     */
    public Dependency.ProjectReferences createDependencyProjectReferences() {
        return new Dependency.ProjectReferences();
    }

    /**
     * Create an instance of {@link Dependency.RelatedDependencies }
     * 
     */
    public Dependency.RelatedDependencies createDependencyRelatedDependencies() {
        return new Dependency.RelatedDependencies();
    }

    /**
     * Create an instance of {@link Dependency.EvidenceCollected }
     * 
     */
    public Dependency.EvidenceCollected createDependencyEvidenceCollected() {
        return new Dependency.EvidenceCollected();
    }

    /**
     * Create an instance of {@link Dependency.Identifiers }
     * 
     */
    public Dependency.Identifiers createDependencyIdentifiers() {
        return new Dependency.Identifiers();
    }

    /**
     * Create an instance of {@link Dependency.Vulnerabilities }
     * 
     */
    public Dependency.Vulnerabilities createDependencyVulnerabilities() {
        return new Dependency.Vulnerabilities();
    }

    /**
     * Create an instance of {@link Vulnerability.Cwes }
     * 
     */
    public Vulnerability.Cwes createVulnerabilityCwes() {
        return new Vulnerability.Cwes();
    }

    /**
     * Create an instance of {@link Vulnerability.References }
     * 
     */
    public Vulnerability.References createVulnerabilityReferences() {
        return new Vulnerability.References();
    }

    /**
     * Create an instance of {@link Vulnerability.VulnerableSoftware }
     * 
     */
    public Vulnerability.VulnerableSoftware createVulnerabilityVulnerableSoftware() {
        return new Vulnerability.VulnerableSoftware();
    }

    /**
     * Create an instance of {@link RelatedDependency.Identifiers }
     * 
     */
    public RelatedDependency.Identifiers createRelatedDependencyIdentifiers() {
        return new RelatedDependency.Identifiers();
    }

    /**
     * Create an instance of {@link Exception.StackTrace }
     * 
     */
    public Exception.StackTrace createExceptionStackTrace() {
        return new Exception.StackTrace();
    }

    /**
     * Create an instance of {@link ScanInfo.DataSource }
     * 
     */
    public ScanInfo.DataSource createScanInfoDataSource() {
        return new ScanInfo.DataSource();
    }

    /**
     * Create an instance of {@link ScanInfo.AnalysisExceptions }
     * 
     */
    public ScanInfo.AnalysisExceptions createScanInfoAnalysisExceptions() {
        return new ScanInfo.AnalysisExceptions();
    }

}
